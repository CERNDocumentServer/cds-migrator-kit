# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 CERN.
#
# CDS-ILS is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 3 * * 6"
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason"
        required: false
        default: "Manual trigger"

jobs:
  RDMTests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [3.9]
        requirements-level: [pypi]
        db-service: [postgresql14]
        include:
          - db-service: postgresql14
            DB_EXTRAS: "postgresql"

    env:
      DB: ${{ matrix.db-service }}
      EXTRAS: rdm,tests
    steps:
      - name: Install python-ldap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libsasl2-dev libldap2-dev libssl-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.cfg

      - name: Install dependencies
        run: |
          pip install ".[$EXTRAS]"
          pip freeze
          docker --version
          docker compose --version

      - name: Run tests
        run: ./run-tests.sh rdm
  VideosTests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [3.9]
        requirements-level: [pypi]
        db-service: [postgresql14]
        include:
          - db-service: postgresql14
            DB_EXTRAS: "postgresql"

    env:
      DB: ${{ matrix.db-service }}
      EXTRAS: videos,tests
    steps:
      - name: Install python-ldap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libsasl2-dev libldap2-dev libssl-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: setup.cfg

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install uritemplate
          pip install "pytest-cov<4.0.0"
          pip install ".[$EXTRAS]"
          pip freeze
          docker --version
          docker compose --version

      - name: Run tests
        run: ./run-tests.sh videos
